apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'java-gradle-plugin'
apply plugin: "com.gradle.plugin-publish"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

pluginBundle {
    website = POM_URL
    vcsUrl = 'https://github.com/yshrsmz/BuildKonfig.git'
    description = POM_DESCRIPTION
    tags = ['BuildConfig', 'Kotlin', 'Kotlin Multiplatform']

    plugins {
        buildKonfig {
            displayName = POM_NAME
        }
    }
}

gradlePlugin {
    plugins {
        buildKonfig {
            id = "com.codingfeline.buildkonfig"
            implementationClass = "com.codingfeline.buildkonfig.gradle.BuildKonfigPlugin"
        }
    }
}

configurations {
    fixtureClasspath
}

// Append any extra dependencies to the test fixtures via a custom configuration classpath. This
// allows us to apply additional plugins in a fixture while still leveraging dependency resolution
// and de-duplication semantics.
tasks.getByName('pluginUnderTestMetadata')
        .getPluginClasspath()
        .from(configurations.fixtureClasspath)

dependencies {
    implementation project(':buildkonfig-compiler')
    implementation deps.kotlin.stdlib.jdk8

    compileOnly gradleApi()
    implementation deps.plugins.kotlin

    testImplementation deps.junit
    testImplementation deps.truth

    fixtureClasspath deps.plugins.kotlin
    fixtureClasspath deps.plugins.android
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"
